{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","completed","id","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoFilter","setTodos","useState","initialTodos","setInitialTodos","query","setQuery","useEffect","inputHandler","input","filter","includes","onChange","event","selectionKind","selectHandler","target","value","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","userId","href","email","name","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e42b3a6f.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          todo.completed\n            ? (\n              <tr\n                data-cy=\"todo\"\n                className=\"\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className=\"has-text-success\">{todo.title}</p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setSelectedTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      {selectedTodo && selectedTodo.id === todo.id\n                        ? <i className=\"far fa-eye-slash\" />\n                        : <i className=\"far fa-eye\" />}\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            )\n            : (\n              <tr\n                data-cy=\"todo\"\n                className=\"\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\" />\n                <td className=\"is-vcentered is-expanded\">\n                  <p className=\"has-text-danger\">\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setSelectedTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      {selectedTodo && selectedTodo.id === todo.id\n                        ? <i className=\"far fa-eye-slash\" />\n                        : <i className=\"far fa-eye\" />}\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            )))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { useEffect, useState } from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setTodos: (todos: Todo[]) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setTodos }) => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    getTodos().then(setInitialTodos);\n  }, []);\n\n  const selectHandler = (selectionKind: string) => {\n    switch (selectionKind) {\n      case 'all':\n        setTodos([...initialTodos]);\n        break;\n      case 'active':\n        setTodos([...initialTodos].filter(todo => todo.completed === false));\n        break;\n      case 'completed':\n        setTodos([...initialTodos]\n          .filter(todo => todo.completed === true));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const inputHandler = (input: string) => {\n    setQuery(input);\n    setTodos(initialTodos.filter(todo => todo.title.includes(input)));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              selectHandler(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            inputHandler(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => inputHandler('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  setSelectedTodo : (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )\n        : <Loader />}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        selectedTodo && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            setSelectedTodo={setSelectedTodo}\n          />\n        )\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}